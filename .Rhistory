, data = seal_data, family = gaussian)
summary(GLMM_E)
model.comparison(GLMM_E, GLM_Final)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
model.comparison(GLMM_E, GLM_Final)
summary(GLMM_E)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.diveristy| Dominant.prey.species) , data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dominant.prey.species| Dietary.energy.density) , data = seal_data, family = gaussian)
model.comparison(GLMM_F, GLM_Final)
summary(GLMM_F)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dominant.prey.species| Diet.diversity) , data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dominant.prey.species| Dietary.energy.density) , data = seal_data, family = gaussian)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) , data = seal_data, family = gaussian)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
summary(GLMM_F)
git config pull.rebase false
GLMM_G = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dominant.prey.species| Diet.diversity) + (Dominant.prey.species| Dietary.energy.density),
data = seal_data, family = gaussian)
GLMM_G = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) + (Dietary.diversity | Dominant.prey.species),
data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) , data = seal_data, family = gaussian)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) , data = seal_data, family = gaussian)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dominant.prey.species | Dietary.energy.density) , data = seal_data, family = gaussian)
GLMM_G = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) + (Dietary.diversity | Dominant.prey.species),
data = seal_data, family = gaussian)
GLMM_G = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) + (Diet.diversity | Dominant.prey.species),
data = seal_data, family = gaussian)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
model.comparison(GLMM_E, GLM_Final)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + Dominant.prey.species
+ (Dietary.energy.density | Dominant.prey.species) , data = seal_data, family = gaussian)
summary(GLMM_E)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Diet.diversity | Dominant.prey.species ) , data = seal_data, family = gaussian)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Dietary.energy.density | Dominant.prey.species ) , data = seal_data, family = gaussian)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Diet.diversity | Dominant.prey.species ) , data = seal_data, family = gaussian)
GLMM_F = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Diet.diversity | Dominant.prey.species ) , data = seal_data)
summary(GLMM_F)
model.comparison(GLMM_F, GLM_Final)
GLMM_G = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Dietary.energy.density | Dominant.prey.species ) , data = seal_data)
summary(GLMM_G)
model.comparison(GLMM_F, GLM_Final)
GLMM_H = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Dietary.energy.density + Diet.diversity | Dominant.prey.species ) , data = seal_data)
summary(GLMM_H)
model.comparison(GLMM_G, GLM_Final)
summary(GLMM_H)
model.comparison(GLMM_H, GLM_Final)
GLMM_H = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Dietary.energy.density + Diet.diversity | Dominant.prey.species ) , data = seal_data)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Dominant.prey.species| Dietary.energy.density) , data = seal_data, family = gaussian)
GLMM_F = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density
+ (Diet.diversity | Dominant.prey.species ) , data = seal_data)
require(modelr)
require(caret)
require(readr)
rm(list=ls())
seal_data = read.csv("Data_Q2.csv", header = T)
setwd("~/Desktop/IDPhD Classes/Stat 5620/Final Project/Proposal Presentation/Working Folder/Final Assignment/Processed_Data")
seal_data = read.csv("Data_Q2.csv", header = T)
summary(seal_data)
seal_data
Data_Q2 <- read_csv("Processed_Data/Data_Q2.csv")
Data_Q2 <- read_csv(Data_Q2.csv)
seal_data = read.csv("Data_Q2.csv", header = T)
Data_Q2 = read.csv("Data_Q2.csv", header = T)
Data_Q2$MomID <- as.factor(Data_Q2$MomID)
Data_Q2$Year <- as.factor(Data_Q2$Year)
Data_Q2$`Mom Age` <- as.factor(Data_Q2$`Mom Age`)
Data_Q2$MomID <- as.factor(Data_Q2$MomID)
Data_Q2$Year <- as.factor(Data_Q2$Year)
Data_Q2$`Mom Age` <- as.factor(Data_Q2$`Mom Age`)
Data_Q2$`Pup sex` <- as.factor(Data_Q2$`Pup sex`)
Data_Q2$`Dominant prey species`<- as.character(Data_Q2$`Dominant prey species`)
Data_Q2$`Diet diversity` <- as.numeric(Data_Q2$`Diet diversity`)
Data_Q2$`Dietary energy density` <- as.numeric(Data_Q2$`Dietary energy density`)
summary(Data_Q2)
library(dplyr)
Data_Q2 <- Data_Q2 %>%
rename(
DietEngDen = `Dietary energy density`,
DietDiv = `Diet diversity`,
DomSpp = `Dominant prey species`,
MomAge = `Mom Age`,
WeanMass = 'Pup Wean Mass',
PupSex = 'Pup sex')
ggplot(data = Data_Q2, aes(x = fitted_values, y = observed_values)) +
geom_point(color = "blue") +  # Plot the points
geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +  # Add 1:1 line
labs(
title = "Fitted vs. Observed Weaning Mass Values",
x = "Fitted Values",
y = "Observed Values"
) +
theme_minimal()
fitted_values <- fitted(pup_mod2)
pup_mod2 <- glm(formula = WeanMass ~ DietDiv + DomSpp, family = Gamma(link = "log"),
data = Data_Q2)
ggplot(Data_Q2, aes(x = DomSpp, y = WeanMass, fill = DomSpp)) +
geom_boxplot() +  # Create the boxplot
stat_summary(
fun = "mean", geom = "point", shape = 18, size = 3, color = "red"  # Add mean as a red point
) + geom_text(x = "Pollock", y = 45, label = "*",  # Asterisk at "Capelin" on x-axis and y = 45
aes(x = x, y = y, label = label),  # Position asterisk
color = "black", size = 6, fontface = "bold"
) +
labs(
title = "Median (black line) mean (red dot) pup weaning mass by dominant prey species",
x = "Prey species",
y = "Pup weaning mass (kg)", fill = "Dominant prey species"
) +
theme_minimal() + theme(
axis.line = element_line(color = "black", size = 1),  # Add axis lines
axis.text.x = element_text(size = 12, angle = 45, hjust = 1)
) +
scale_y_continuous(
breaks = seq(0, max(Data_Q2$WeanMass) + 55, by = 10)
)
set.seed(1980)
require(modelr)
require(caret)
require(readr)
attach(seal_data)
set.seed(1980)
index = createDataPartition(seal_data$Pup.Wean.Mass, p = .8, list = FALSE, times = 1)
summary(seal_data$Pup.Wean.Mass)
seal_data
data_frame = as.data.frame(seal_data)
train_data_frame = data_frame[index,]
test_data_frame = data_frame[-index,]
train_data_frame$complaints = as.factor (train_data_frame$complaints)
class (train_data_frame$complaints)
View(test_data_frame)
View(train_data_frame)
train_data_frame$complaints = as.factor (train_data_frame$complaints)
train_data_frame$Pup.Wean.Mass = as.factor (train_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass = as.factor (test_data_frame$Pup.Wean.Mass)
class (train_data_frame$complaints)
class (test_data_frame$complaints)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all", ClassProbs=TRUE)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all")
set.seed(1980)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "glm", family = poisson, data = train_data_frame, trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "glmm", family = poisson, data = train_data_frame, trControl = control_specs)
? "train"
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "lmer", family = poisson, data = train_data_frame, trControl = control_specs)
model_cross_v = train(model=GLMM_E, method = "lmer", family = poisson, data = train_data_frame,
trControl = control_specs)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
require(lme4)
require(lme4)
GLMM_A = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
+ (1 | Year) + (1 | Mom.Age) + (1 | Pup.sex) + (1 | MomID), data = seal_data, family = gaussian)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
model_cross_v = train(model=GLMM_E, method = "lmer", family = poisson, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(model=GLMM_E, method = "lmer", family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(model=GLMM_E, method = "lmer", family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "lmer", family = gaussian, data = train_data_frame,
trControl = control_specs)
train_data_frame$Pup.Wean.Mass = as.numeric (train_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass = as.numeric(test_data_frame$Pup.Wean.Mass)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "lmer", family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density,
method = "lmer", family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density,
family = gaussian, data = train_data_frame,
trControl = control_specs)
model_cross_v = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
family = gaussian, data = train_data_frame,
trControl = control_specs)
seal_data = read.csv("Data_Q2.csv", header = T)
setwd("~/Desktop/IDPhD Classes/Stat 5620_Updated/Final Project/Proposal Presentation/Working Folder/Final Assignment/Processed_Data")
seal_data = read.csv("Data_Q2.csv", header = T)
summary(seal_data)
###############.    Fit Linear Model (all predictor variables)
## convert categorical data to factors
seal_data$MomID = as.factor(seal_data$MomID)
seal_data$Year = as.factor(seal_data$Year)
seal_data$Dominant.prey.species = as.factor(seal_data$Dominant.prey.species)
seal_data$Pup.sex = as.factor(seal_data$Pup.sex)
seal_data$Pup.Mom.Age = as.factor(seal_data$Mom.Age)
nlevels(seal_data$MomID)
# 51
nlevels(seal_data$Year)
# 13
nlevels(seal_data$Dominant.prey.species)
# 5
nlevels(seal_data$Pup.sex)
# 2
nlevels(seal_data$Pup.Mom.Age)
# 17
Q1 = lm(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity + seal_data$Dietary.energy.density
+ seal_data$Year + seal_data$Mom.Age + seal_data$Pup.sex + seal_data$MomID, data = seal_data)
summary(Q1)
### Does not work
#### meaning more columns than rows, meaning in turn more variables than observations, which directly leads to the NaN on 0 degrees of freedom.
### too many variales and not enough data
### need to remove some factors so try each one to see which model is better
### all four factor variables in model found infinite model so "mother ID" factor was removed below
Q2 = lm(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity + seal_data$Dietary.energy.density
+ seal_data$Year +  seal_data$Mom.Age + seal_data$Pup.sex , data = seal_data)
summary (Q2)
### Adjusted R-squared:  0.209
###  p-value: 0.08393
### remove "year" variable
Q3 = lm(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity + seal_data$Dietary.energy.density
+  seal_data$Mom.Age + seal_data$Pup.sex + seal_data$MomID, data = seal_data)
summary (Q3)
### Does not work
### remove "Dominant.prey.species" variable
Q4 = lm(seal_data$Pup.Wean.Mass ~  seal_data$Diet.diversity + seal_data$Dietary.energy.density
+ seal_data$Year + seal_data$Mom.Age + seal_data$Pup.sex + seal_data$MomID, data = seal_data)
summary (Q4)
### Does not work
###  Best lm is all varialbes except MomID so Q2 model above
#Step Function
fwd.model = step (Q2, direction='forward')
### all varailbles with AIC = 216.76
backward.model = step(Q2, direction='backward')
### dominant.prey.species and diet.diveristy with AIC 202.62
### Backward found best model included (seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity)
# We will now run this linear model with the data
Q1_Reduced = lm(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity,
data = seal_data)
summary(Q1_Reduced)
# We find that a p-value: 0.00121 with a Adjusted R-squared:  0.2715  (27 % of variance explained by model)
### Conclusions that the most significant variables are prey species Pollock and White Hake. This shows the
### importance of the mixed model (GLMM)
#### Interact Plot to see how the categories within the Dominant.prey.species variable act independently
library(jtools)
qplot (seal_data$Dominant.prey.species, Q1_Reduced)
require(lme4)
GLMM_A = lmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
+ (1 | Year) + (1 | Mom.Age) + (1 | Pup.sex) + (1 | MomID), data = seal_data, family = gaussian)
require(modelr)
require(caret)
require(readr)
attach(seal_data)
set.seed(1980)
index = createDataPartition(seal_data$Pup.Wean.Mass, p = .8, list = FALSE, times = 1)
summary(seal_data$Pup.Wean.Mass)
print(seal_data$Pup.Wean.Mass)
data_frame = as.data.frame(seal_data)
train_data_frame = data_frame[index,]
test_data_frame = data_frame[-index,]
View(test_data_frame)
train_data_frame$complaints = as.factor (train_data_frame$complaints)
train_data_frame$Pup.Wean.Mass = as.factor (train_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass = as.factor (test_data_frame$Pup.Wean.Mass)
View(seal_data)
train_data_frame$Pup.Wean.Mass = as.factor (train_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass = as.factor (test_data_frame$Pup.Wean.Mass)
class (train_data_frame$Pup.Wean.Mas)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all", ClassProbs=TRUE)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all", classProbs=TRUE)
# Set Random Seed
set.seed(1980)
require(randomForest)
GLM_Final = glm (seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity, family = gaussian)
model_cross = train(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity, family = gaussian,
method = "glm", family = poisson, data = train_data_frame, trControl = control_specs)
model_cross = train(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
model_cross = train(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all")
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
print (model_cross)
summary(model_cross)
varImp (model_cross)
predictions = predict (model_cross, newdata = test_data_frame)
predictions
test_data_frame$Pup.Wean.Mass
set.seed(1980)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
print (model_cross)
varImp (model_cross)
predictions = predict (model_cross, newdata = test_data_frame)
predictions
test_data_frame$Pup.Wean.Mass
confusionMatrix(data= predictions, factor(test_data_frame$complaints))
train_data_frame = data_frame[index,]
test_data_frame = data_frame[-index,]
train_data_frame$Pup.Wean.Mass = as.factor (train_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass = as.factor (test_data_frame$Pup.Wean.Mass)
class (train_data_frame$Pup.Wean.Mass)
class (test_data_frame$Pup.Wean.Mass)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all")
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all", classProbs = TRUE)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
control_specs = trainControl(method = "cv", number = 11 , savePredictions = "all")
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
print (model_cross)
set.seed(1980)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = seal_data, trControl = control_specs)
print (model_cross)
varImp (model_cross)
predictions = predict (model_cross, newdata = test_data_frame)
predictions
predictions = predict (model_cross, data = test_data_frame)
predictions
predictions = predict (model_cross, newdata = test_data_frame)
predictions
View(test_data_frame)
test_data_frame
confusionMatrix(data= predictions, factor(test_data_frame$Pup.Wean.Mass))
confusionMatrix(data= predictions, test_data_frame$Pup.Wean.Mass)
test_data_frame$Pup.Wean.Mass
test_data_frame
data= predictions
predictions
predicted_value <- factor(c(52.91496, 52.89044, 51.20708, 57.31017, 51.07814, 50.79505, 49.88936, 39.48103, 48.02433))
expected_value <- factor(c(50,56,45.5,55,48,63,53,38,40)
confusionMatrix(predicted_value, expected_value)
confusionMatrix(predicted_value, expected_value)
expected_value <- factor(c(50,56,45.5,55,48,63,53,38,40)
confusionMatrix(predicted_value, expected_value)
expected_value <- factor(c(50,56,45.5,55,48,63,53,38,40)
expected_value <- factor(c(1,0,1,0,1,1,1,0,0,1))
expected_value <- factor(c(1,0,1,0,1,1,1,0,0,1))
predicted_value <- factor(c(1,0,0,1,1,1,0,0,0,1))
example <- confusionMatrix(data=predicted_value, reference = expected_value)
example
expected_value <- factor(c(50,56,45.5,55,48,63,53,38,40))
predicted_value <- factor(c(52.91496, 52.89044, 51.20708, 57.31017, 51.07814, 50.79505, 49.88936, 39.48103, 48.02433))
confusionMatrix(predicted_value, reference = expected_value)
example <- confusionMatrix(data=predicted_value, reference = expected_value)
levels(predicted_value)
levels(expected_value)
expected_value <- factor(c(50,56,45.5,55,48,63,53,38,40))
levels(expected_value)
round (predicted_value, digits = 2)
predicted_value <- (c(52.91496, 52.89044, 51.20708, 57.31017, 51.07814, 50.79505, 49.88936, 39.48103, 48.02433))
round (predicted_value, digits = 2)
round (predicted_value, digits = 0)
round = round (predicted_value, digits = 0)
predicted_value_2 = factor(round)
predicted_value_2
expected_value <- (c(50,56,45.5,55,48,63,53,38,40))
round_2 = round(expected_value)
round_2
expected_value_2 = factor(round_2)
expected_value_2
confusionMatrix(predicted_value_2, reference = expected_value_2)
predicted_value
expected_value_2
data.frame( R2 = R2(predictions, test_data_frame$Pup.Wean.Mass,
RMSE = RMSE(predictions, test_data_frame$Pup.Wean.Mass),
MAE = MAE(predictions, test_data_frame$Pup.Wean.Mass))
data.frame
summary = data.frame( R2 = R2(predictions, test_data_frame$Pup.Wean.Mass,
RMSE = RMSE(predictions, test_data_frame$Pup.Wean.Mass),
MAE = MAE(predictions, test_data_frame$Pup.Wean.Mass))
summary
summary = data.frame( R2 = R2(predictions, test_data_frame$Pup.Wean.Mass,
RMSE = RMSE(predictions, test_data_frame$Pup.Wean.Mass))
summary
summary = data.frame( R2 = R2(predicted_value_2, expected_value_2,
RMSE = RMSE(predicted_value_2, predicted_value_2))
summary
DID = data.frame( R2 = R2(predicted_value_2, expected_value_2,
RMSE = RMSE(predicted_value_2, predicted_value_2))
DID
DID = data.frame( R2 = R2(predicted_value_2, expected_value_2)
DID
Cross_Validation_Corrolation = cor (predicted_value_2, expected_value_2)
source("~/Desktop/IDPhD Classes/Stat 5620_Updated/Final Project/Proposal Presentation/Working Folder/Final Assignment/R-Script/Final Project_PB_March_22.R", echo=TRUE)
Cross_Validation_Corrolation = cor (predicted_value, expected_value)
Cross_Validation_Corrolation
test_data_frame$Pup.Wean.Mass
mutate ( R2 = cor^2 )
library(dplyr)
mutate ( R2 = cor^2 )
R2 = (Cross_Validation_Corrolation^2 )
R2
set.seed(1981)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "lmer", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "glmm", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (Diet.diversity | Dominant.prey.species), family = gaussian,
method = "glmm", data = seal_data, trControl = control_specs)
train_data_frame = data_frame[index,]
test_data_frame = data_frame[-index,]
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "glmm", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "glmmer", data = seal_data, trControl = control_specs)
model_cross = train(GLMM_E, family = gaussian,
method = "glmmer", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "glmer", data = seal_data, trControl = control_specs)
model_cross
model_cros = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "glmer", data = seal_data, trControl = control_specs)
model_cros
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species), family = gaussian,
method = "lmer", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "lmer", data = seal_data, trControl = control_specs)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = train_data_frame, trControl = control_specs)
model_cross
set.seed(1980)
model_cross = train(Pup.Wean.Mass ~ Dominant.prey.species + Diet.diversity, family = gaussian,
method = "glm", data = train_data_frame, trControl = control_specs)
print (model_cross)
varImp (model_cross)
predications = predict (model_cross, newdata = test_data_frame)
predications
test_data_frame
predicted_value <- (c(53.68369, 51.35064, 51.96753, 58.46629, 50.35432, 50.06986, 49.15978, 39.97458, 48.76934))
expected_value <- (c(50,56,45.5,55,48,63,53,38,40))
Cross_Validation_Corrolation = cor (predicted_value, expected_value)
Cross_Validation_Corrolation
R2 = (Cross_Validation_Corrolation^2 )
R2
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species),
method = "lmer", data = train_data_frame, trControl = control_specs)
improve.fit (GLMM_E, GLMM_F)
library(flexplot)
improve.fit (GLMM_E, GLMM_F)
install.packages("rdrr.io")
install.packages("dustinfife/fifer")
model_cross = train(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (Diet.diversity | Dominant.prey.species),
method = "lmer", data = train_data_frame, trControl = control_specs)
setwd("~/Desktop/IDPhD Classes/Stat 5620_Updated/Final Project/Proposal Presentation/Working Folder/Final Assignment/Processed_Data")
seal_data = read.csv("Data_Q2.csv", header = T)
summary(seal_data)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
require(lme4)
GLMM_E = glmer(Pup.Wean.Mass ~  Diet.diversity + Dietary.energy.density + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
res =resid(GLMM_E)
plot(fitted(GLMM_E),res)
abline(0,0)
GLMM_F = glmer(Pup.Wean.Mass ~  Diet.diversity + (1 | Dominant.prey.species)
, data = seal_data, family = gaussian)
summary(GLMM_F)
res_2 =resid(GLMM_F)
plot(fitted(GLMM_F),res_2)
abline(0,0)
GLM_Final = glm(seal_data$Pup.Wean.Mass ~ seal_data$Dominant.prey.species + seal_data$Diet.diversity, family = gaussian)
res_3 =resid(GLM_Final)
res_3 =resid(GLM_Final)
plot(fitted(GLM_Final),res_3)
abline(0,0)
